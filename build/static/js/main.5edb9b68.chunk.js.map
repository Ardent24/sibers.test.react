{"version":3,"sources":["components/modules/sort-users.js","components/modules/localeStorageUsers.js","components/header/HeaderBtn.jsx","components/header/HeaderInput.jsx","components/header/Header.jsx","components/core/ContactsItem.jsx","components/core/Contacts.jsx","components/modals/ModalLabel.jsx","components/modals/ModalInput.jsx","components/modals/ModalGroup.jsx","components/modals/ModalBtn.jsx","components/modals/Modal.jsx","App.js","components/modules/request-users.js","index.js"],"names":["sortUsers","users","field","sort","a","b","localeStorageUsers","promise","LS_USERS","LS_NAME_TASKS","localStorage","getItem","setItem","JSON","stringify","usersString","parse","HeaderBtn","props","className","onClick","modalStatus","changeModalContent","HeaderInp","type","placeholder","onChange","event","onChangeSearchUser","target","value","Header","ContactsItem","USER","dataUser","PREV_USER","listUsers","idUser","templateTitleBtn","name","charAt","toUpperCase","templateBtn","id","undefined","Contacts","data","map","user","i","arrayUsers","ModalLabel","htmlFor","infoGroup","ModalInput","useState","inputState","setInputState","placeholderState","setPlaceholderState","infoUser","modalContent","useEffect","valueInp","valueUpCase","newArrayUsers","filter","onChangeUsers","slice","onChangeNewUser","newUser","ModalGroup","ModalBtn","length","newListUsers","LOCALE_STORAGE","push","resetModal","Modal","phone","email","setNewUser","changeClassWrap","classNames","active","isOpenModal","changeClassBox","titleModal","preventDefault","div","document","querySelector","App","setUsers","setOpenModal","setModalContent","searchUser","setSearchUser","fetch","then","res","json","promiseUsers","filterUsers","toLowerCase","includes","isOpen","search","editListUsers","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5edb9b68.chunk.js","sourcesContent":["const sortUsers = (users) => {\n  const byField = (field) => (a, b) => (a[field] > b[field] ? 1 : -1);\n\n  return users.sort(byField(\"name\"));\n};\n\nexport { sortUsers };\n","const localeStorageUsers = (promise) => {\n  const LS_USERS = promise;\n  const LS_NAME_TASKS = 'users';\n\n  if (!localStorage.getItem(LS_NAME_TASKS)) {\n    localStorage.setItem(LS_NAME_TASKS, JSON.stringify(LS_USERS));\n  }\n\n  const usersString = localStorage.getItem('users');\n  const parseUsers = JSON.parse(usersString);\n\n  return parseUsers;\n}\n\nexport {localeStorageUsers};","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default function HeaderBtn(props) {\n  const onClickBtn = () => {\n    props.modalStatus(true);\n    props.changeModalContent(null);\n  };\n  return <button className=\"contacts-header__add\" onClick={onClickBtn} />;\n}\n\nHeaderBtn.propTypes = {\n  modalStatus: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction HeaderInp(props) {\n  const onChangeInp = (event) => props.onChangeSearchUser(event.target.value);\n\n  return (\n    <input\n      type=\"search\"\n      className=\"contacts-header__search\"\n      placeholder=\"Search...\"\n      onChange={onChangeInp}\n    />\n  );\n}\n\nHeaderInp.propTypes = {\n  onChangeSearchUser: PropTypes.func.isRequired,\n};\n\nexport default HeaderInp;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport HeaderBtn from \"./HeaderBtn\";\nimport HeaderInp from \"./HeaderInput\";\n\nexport default function Header(props) {\n  return (\n    <header className=\"contacts-header\">\n      <div className=\"contacts-header__wrapper\">\n        <h1 className=\"contacts-title\">Contacts</h1>\n        <HeaderBtn\n          modalStatus={props.modalStatus}\n          changeModalContent={props.changeModalContent}\n        />\n        <HeaderInp onChangeSearchUser={props.onChangeSearchUser} />\n      </div>\n    </header>\n  );\n}\n\nHeader.propTypes = {\n  modalStatus: PropTypes.func.isRequired,\n  onChangeSearchUser: PropTypes.func,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst ContactsItem = (props) => {\n  const USER = props.dataUser;\n  const PREV_USER = props.listUsers[props.idUser - 1];\n\n  const onChangeDataModal = () => {\n    props.modalStatus(true);\n    props.changeModalContent(USER);\n  };\n\n  const templateTitleBtn = (\n    <h2\n      className=\"contacts-content__title contacts-wrap\"\n      key={USER.name.charAt(0)}\n    >\n      {USER.name.charAt(0).toUpperCase()}\n    </h2>\n  );\n\n  const templateBtn = (\n    <button\n      className={\"contacts-content__elem\"}\n      onClick={onChangeDataModal}\n      key={USER.id}\n    >\n      {USER.name}\n    </button>\n  );\n\n  const onChangeTemplate = () => {\n    if (PREV_USER === undefined) {\n      return (\n        <>\n          {templateTitleBtn}\n          {templateBtn}\n        </>\n      );\n    }\n    if (USER.name.charAt(0) !== PREV_USER.name.charAt(0)) {\n      return (\n        <>\n          {templateTitleBtn}\n          {templateBtn}\n        </>\n      );\n    } else {\n      return <>{templateBtn}</>;\n    }\n    // if (){\n    //   return\n    // } else{\n    //   return ;\n    // }\n\n    // if (props.idUser === 1) return <>{templateTitleBtn}</>;\n    // if (USER.name.charAt(0) !== PREV_USER.name.charAt(0)) {\n    //   return (\n    //     <>\n    //       {templateTitleBtn}\n    //       {templateBtn}\n    //     </>\n    //   );\n    // } else {\n    //   return <>{templateBtn}</>;\n    // }\n  };\n\n  return <>{onChangeTemplate()}</>;\n};\n\nContactsItem.propTypes = {\n  idUser: PropTypes.number,\n  listUsers: PropTypes.array,\n  dataUser: PropTypes.object,\n  data: PropTypes.array,\n  modalStatus: PropTypes.func.isRequired,\n  changeModalContent: PropTypes.func.isRequired,\n};\n\nexport default ContactsItem;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport ContactsItem from \"./ContactsItem\";\n\nconst Contacts = (props) => {\n  return (\n    <div className=\"contacts-wrapper\">\n      <div className=\"contacts-content\">\n        {props.data &&\n          props.data.map((user, i, arrayUsers) => (\n            <ContactsItem\n              dataUser={user}\n              idUser={i}\n              listUsers={arrayUsers}\n              modalStatus={props.modalStatus}\n              changeModalContent={props.changeModalContent}\n              key={i}\n            />\n          ))}\n      </div>\n    </div>\n  );\n};\n\nContacts.propTypes = {\n  data: PropTypes.array,\n  modalStatus: PropTypes.func.isRequired,\n  changeModalContent: PropTypes.func.isRequired,\n};\n\nexport default Contacts;","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst ModalLabel = (props) => (\n  <label className=\"contacts-modal__label\" htmlFor={props.infoGroup}>\n    {props.infoGroup}\n  </label>\n);\n\nModalLabel.propTypes = {\n  infoGroup: PropTypes.string.isRequired,\n};\n\nexport default ModalLabel;\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { sortUsers } from \"../modules/sort-users\";\n\nconst ModalInput = (props) => {\n  const [inputState, setInputState] = useState(\"\");\n  const [placeholderState, setPlaceholderState] = useState(\"\");\n  const infoUser = props.modalContent;\n  const infoGroup = props.infoGroup;\n\n  useEffect(() => {\n    if (infoUser) {\n      setInputState(infoUser[infoGroup]);\n      setPlaceholderState(\"\");\n    } else {\n      setInputState(\"\");\n      setPlaceholderState(`Enter your ${infoGroup}`);\n    }\n  }, [infoGroup, infoUser]);\n\n  const onChangeUserInfo = (event) => {\n    const valueInp = event.target.value;\n    let valueUpCase = \"\";\n\n    setInputState(valueInp);\n\n    if (infoUser) {\n      const newArrayUsers = [...props.localeStorageUsers].filter((user) => {\n        if (user.id === infoUser.id) {\n           (user[infoGroup] = valueInp);\n        }\n        return user\n      });\n\n      localStorage.setItem(\"users\", JSON.stringify(newArrayUsers));\n\n      props.onChangeUsers(sortUsers(newArrayUsers));\n    }\n\n    if (!infoUser) {\n      if (props.infoGroup === \"name\") {\n        valueUpCase = valueInp[0].toUpperCase() + valueInp.slice(1);\n      } else {\n        valueUpCase = event.target.value;\n      }\n\n      props.onChangeNewUser({\n        ...props.newUser,\n        [props.infoGroup]: valueUpCase,\n      });\n    }\n  };\n\n  return (\n    <input\n      type=\"text\"\n      className=\"contacts-modal__inp\"\n      onChange={onChangeUserInfo}\n      value={inputState}\n      placeholder={placeholderState}\n      id={infoGroup}\n    />\n  );\n};\n\nModalInput.propTypes = {\n  modalContent: PropTypes.object,\n  infoGroup: PropTypes.string.isRequired,\n  onChangeNewUser: PropTypes.func,\n  newUser: PropTypes.object,\n};\n\nexport default ModalInput;\n","import React from \"react\";\nimport PropTypes from 'prop-types';\n\nimport ModalLabel from \"./ModalLabel\";\nimport ModalInput from \"./ModalInput\";\n\nconst ModalGroup = (props) => {\n  return (\n    <div className=\"contacts-modal__group\">\n      <ModalLabel infoGroup={props.infoGroup} />\n      <ModalInput\n        modalContent={props.modalContent}\n        infoGroup={props.infoGroup}\n        onChangeNewUser={props.onChangeNewUser}\n        newUser={props.newUser}\n        onChangeUsers={props.onChangeUsers}\n        localeStorageUsers={props.localeStorageUsers}\n      />\n    </div>\n  );\n};\n\nModalGroup.propTypes = {\n  modalContent: PropTypes.object,\n  infoGroup: PropTypes.string.isRequired,\n  onChangeNewUser: PropTypes.func,\n  newUser: PropTypes.object,\n  onChangeUsers: PropTypes.func,\n  localeStorageUsers: PropTypes.array\n}\n\nexport default ModalGroup;","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { sortUsers } from \"../modules/sort-users\";\n\nconst ModalBtn = (props) => {\n  const editModalContent = () => {\n    const newUser = props.newUser;\n    newUser.id = props.listUsers.length;\n\n    const newListUsers = [...props.listUsers, newUser];\n    const LOCALE_STORAGE = JSON.parse(localStorage.getItem(\"users\"));\n\n    LOCALE_STORAGE.push(newUser);\n    localStorage.setItem(\"users\", JSON.stringify(LOCALE_STORAGE));\n\n    props.onChangeUsers(sortUsers(newListUsers));\n    props.resetModal();\n  };\n\n  return (\n    <button className=\"contacts-modal__closed\" onClick={editModalContent}>\n      OK\n    </button>\n  );\n};\n\nModalBtn.propTypes = {\n  newUser: PropTypes.object,\n  onChangeUsers: PropTypes.func,\n  resetModal: PropTypes.func,\n  listUsers: PropTypes.array,\n};\n\nexport default ModalBtn;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\n\nimport ModalGroup from \"./ModalGroup\";\nimport ModalBtn from \"./ModalBtn\";\n\nconst Modal = (props) => {\n  const [newUser, setNewUser] = useState({\n    name: \"\",\n    phone: \"\",\n    email: \"\",\n    id: 0,\n  });\n  const onChangeNewUser = (dataUser) => setNewUser(dataUser);\n\n  const resetModal = () => {\n    props.modalStatus(false);\n    props.changeModalContent(null);\n  };\n\n  const outSideClick = (event) => {\n    event.preventDefault();\n    const div = document.querySelector(\".contacts-modal\");\n    if (event.target === div) resetModal();\n  };\n\n  const changeClassWrap = classNames(\"contacts-modal\", {\n    active: props.isOpenModal,\n  });\n  const changeClassBox = classNames(\"contacts-modal__wrapper\", {\n    active: props.isOpenModal,\n  });\n\n  const titleModal = props.modalContent\n    ? props.modalContent.name\n    : \"Add contact\";\n\n  return (\n    <div className={changeClassWrap} onClick={outSideClick}>\n      <form className={changeClassBox}>\n        <header className=\"contacts-modal__header\">\n          <h4 className=\"contacts-modal__title\">{titleModal}</h4>\n          <button className=\"contacts-modal__close\" onClick={resetModal}>\n            &times;\n          </button>\n        </header>\n        <main className=\"contacts-modal__main\">\n          <ModalGroup\n            modalContent={props.modalContent}\n            infoGroup=\"name\"\n            onChangeNewUser={onChangeNewUser}\n            newUser={newUser}\n            onChangeUsers={props.onChangeUsers}\n            localeStorageUsers={props.localeStorageUsers}\n          />\n          <ModalGroup\n            modalContent={props.modalContent}\n            infoGroup=\"phone\"\n            onChangeNewUser={onChangeNewUser}\n            newUser={newUser}\n            onChangeUsers={props.onChangeUsers}\n            localeStorageUsers={props.localeStorageUsers}\n          />\n          <ModalGroup\n            modalContent={props.modalContent}\n            infoGroup=\"email\"\n            onChangeNewUser={onChangeNewUser}\n            newUser={newUser}\n            onChangeUsers={props.onChangeUsers}\n            localeStorageUsers={props.localeStorageUsers}\n          />\n        </main>\n        {!props.modalContent && (\n          <ModalBtn\n            newUser={newUser}\n            modalContent={props.modalContent}\n            onChangeUsers={props.onChangeUsers}\n            resetModal={resetModal}\n            listUsers={props.listUsers}\n          />\n        )}\n      </form>\n    </div>\n  );\n};\n\nModal.propTypes = {\n  isOpenModal: PropTypes.bool,\n  modalStatus: PropTypes.func,\n  changeModalContent: PropTypes.func,\n  modalContent: PropTypes.object,\n  onChangeUsers: PropTypes.func,\n  listUsers: PropTypes.array,\n  localeStorageUsers: PropTypes.array,\n};\n\nexport default Modal;\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { requestUsers } from \"./components/modules/request-users\";\nimport { sortUsers } from \"./components/modules/sort-users\";\nimport { localeStorageUsers } from \"./components/modules/localeStorageUsers\";\n\nimport Header from \"./components/header/Header\";\nimport Contacts from \"./components/core/Contacts\";\nimport Modal from \"./components/modals/Modal\";\n\nexport default function App() {\n  const [users, setUsers] = useState(null);\n  const [isOpenModal, setOpenModal] = useState(false);\n  const [modalContent, setModalContent] = useState(null);\n  const [searchUser, setSearchUser] = useState(\"\");\n\n  useEffect(() => {\n    if (!users) {\n      (async function func() {\n        const promiseUsers = await requestUsers();\n        const LS_USERS = localeStorageUsers(promiseUsers);\n        setUsers(sortUsers(LS_USERS));\n      })();\n    } else {\n      setUsers(sortUsers(users));\n    }\n    // eslint-disable-next-line\n  }, []);\n  //console.log(users)\n\n  const filterUsers =\n    users &&\n    users.filter((user) => {\n      return user.name.toLowerCase().includes(searchUser.toLowerCase());\n    });\n\n  const onChangeSearchUser = (search) => setSearchUser(search);\n\n  const modalStatus = (isOpen) => setOpenModal(isOpen);\n\n  const changeModalContent = (changeModalContent) =>\n    setModalContent(changeModalContent);\n\n  const onChangeUsers = (editListUsers) => setUsers(editListUsers);\n\n  return (\n    <div className=\"contacts\">\n      <Header\n        modalStatus={modalStatus}\n        onChangeSearchUser={onChangeSearchUser}\n        changeModalContent={changeModalContent}\n      />\n      <Contacts\n        data={filterUsers}\n        modalStatus={modalStatus}\n        changeModalContent={changeModalContent}\n      />\n      <Modal\n        isOpenModal={isOpenModal}\n        modalStatus={modalStatus}\n        changeModalContent={changeModalContent}\n        modalContent={modalContent}\n        onChangeUsers={onChangeUsers}\n        listUsers={filterUsers}\n        localeStorageUsers={users}\n      />\n    </div>\n  );\n}\n\nApp.propTypes = {\n  modalStatus: PropTypes.func,\n  listUsers: PropTypes.array,\n  data: PropTypes.object,\n  changeModalContent: PropTypes.func,\n  isOpenModal: PropTypes.func,\n  modalContent: PropTypes.func,\n};\n","const requestUsers = () => {\n  return fetch(\"https://demo.sibers.com/users\").then((res) => res.json());\n};\n\nexport { requestUsers };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nimport \"./styles/main.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}